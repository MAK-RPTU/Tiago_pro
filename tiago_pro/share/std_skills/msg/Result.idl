// generated from rosidl_adapter/resource/msg.idl.em
// with input from std_skills/msg/Result.msg
// generated code does not contain a copyright notice


module std_skills {
  module msg {
    module Result_Constants {
      @verbatim (language="comment", text=
        "Error codes" "\n"        "" "\n"        "where meaningful, error codes are aligned with C++11 error codes:" "\n"        "https://en.cppreference.com/w/cpp/error/errno_macros" "\n"        "no error")
      const uint8 ROS_ENOERR = 0;
      @verbatim (language="comment", text=
        "interupted skill execution." "\n"        "if a current executing skill if interupted (for instance by a higher-priority" "\n"        "incoming request), the cancelled call returns this error code.")
      const uint8 ROS_EINTR = 4;
      @verbatim (language="comment", text=
        "bad message" "\n"        "the provided parameters to call the skill are invalid and/or missing.")
      const uint8 ROS_EBADMSG = 74;
      @verbatim (language="comment", text=
        "canceled skill" "\n"        "if the skill execution is canceled by the caller, this error code is returned.")
      const uint8 ROS_ECANCELED = 125;
      @verbatim (language="comment", text=
        "not supported" "\n"        "the requested skill is not supported (for instance, not implemented yet)")
      const uint8 ROS_ENOTSUP = 134;
      @verbatim (language="comment", text=
        "other error")
      const uint8 ROS_EOTHER = 255;
    };
    struct Result {
      uint8 error_code;

      string error_msg;
    };
  };
};
