ros__parameters:
  update_frequency: 10.0
  publish_frequency: 10.0

  use_sim_time: false

  global_frame: "odom"
  robot_base_frame: "base_link"

  # robot_radius: To be set by the robot specific configuration
  footprint: ""

  rolling_window: true
  width: 5
  height: 5
  resolution: 0.05
  track_unknown_space: false
  always_send_full_costmap: True

  plugins: ["obstacle_laser_layer", "inflation_layer", "stvl_layer"]
  filters: ["keepout_filter", "inflation_layer"] # Using Inflation in Keepout for https://github.com/open-navigation/navigation2/issues/1263

  inflation_layer:
    plugin: "nav2_costmap_2d::InflationLayer"
    cost_scaling_factor: 3.0
    inflation_radius: 0.55

  obstacle_laser_layer:
    plugin: "nav2_costmap_2d::ObstacleLayer"
    enabled: True
    observation_sources: scan
    footprint_clearing_enabled: False
    scan:
      topic: "/scan"
      expected_update_rate: 0.2 # seconds
      max_obstacle_height: 2.0
      clearing: True
      marking: True
      data_type: "LaserScan"
      raytrace_max_range: 6.0
      raytrace_min_range: 0.0
      obstacle_max_range: 5.5
      obstacle_min_range: 0.0

  static_layer:
    plugin: "nav2_costmap_2d::StaticLayer"
    map_subscribe_transient_local: True
  keepout_filter:
    plugin: "nav2_costmap_2d::KeepoutFilter"
    enabled: True
    filter_info_topic: "/keepout_map_mask/mask_info"

  stvl_layer:
    plugin: "spatio_temporal_voxel_layer/SpatioTemporalVoxelLayer"
    enabled: true
    voxel_decay: 15.0 # seconds if linear, e^n if exponential
    decay_model: 0 # 0=linear, 1=exponential, -1=persistent
    voxel_size: 0.05 # meters
    track_unknown_space: true # default space is known
    mark_threshold: 0 # voxel height
    update_footprint_enabled: false
    combination_method: 1 # 1=max, 0=override
    origin_z: 0.0 # meters
    publish_voxel_map: false # default off
    transform_tolerance: 0.3 # seconds
    mapping_mode: false # default off, saves map not for navigation
    map_save_duration: 60.0 # default 60s, how often to autosave
    observation_sources: rgbd0_mark rgbd0_clear
    rgbd0_mark:
      data_type: PointCloud2
      topic: "/rgbd_camera/depth/color/points"
      marking: true
      clearing: false
      obstacle_range: 3.0 # meters
      min_obstacle_height: 0.1 # default 0, meters
      max_obstacle_height: 2.0 # default 3, meters
      expected_update_rate: 0.4 # default 0, if not updating at this rate at least, remove from buffer
      observation_persistence: 0.0 # default 0, use all measurements taken during now-value, 0=latest
      inf_is_valid: false # default false, for laser scans
      filter: "voxel" # default passthrough, apply "voxel", "passthrough", or no filter to sensor data, recommend on
      voxel_min_points: 1 # default 0, minimum points per voxel for voxel filter
      clear_after_reading: true # default false, clear the buffer after the layer gets readings from it
    rgbd0_clear:
      data_type: PointCloud2
      topic: "/rgbd_camera/depth/color/points"
      marking: false
      clearing: true
      max_z: 4.5 # default 0, meters
      min_z: 0.1 # default 10, meters
      vertical_fov_angle: 0.7 # default 0.7, radians
      horizontal_fov_angle: 1.04 # default 1.04, radians
      decay_acceleration: 100000.0 # default 0, 1/s^2. If laser scanner MUST be 0
      model_type: 0 # default 0, model type for frustum. 0=depth camera, 1=3d lidar like VLP16 or similar
